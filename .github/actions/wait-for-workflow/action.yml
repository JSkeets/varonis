name: 'Wait for Workflow'
description: 'Wait for a workflow to complete and check its status'

inputs:
  workflow_id:
    description: 'The workflow file name to check (including .yml)'
    required: true
  branch:
    description: 'The branch to check'
    required: true
    default: 'main'
  timeout:
    description: 'Maximum time to wait in minutes'
    required: false
    default: '30'
  run_id:
    description: 'The specific workflow run ID to wait for'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Wait for Workflow Completion
      uses: actions/github-script@v6
      with:
        script: |
          const workflowFileName = '${{ inputs.workflow_id }}';
          const runId = '${{ inputs.run_id }}';
          const timeoutMinutes = parseInt('${{ inputs.timeout }}');
          const intervalSeconds = 10;
          
          console.log(`Looking for workflow run ID: ${runId}`);
          
          let endTime = Date.now() + timeoutMinutes * 60 * 1000;
          let status = 'in_progress';
          
          while (Date.now() < endTime) {
            const run = await github.rest.actions.getWorkflowRun({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: runId
            });
            
            status = run.data.status;
            console.log(`Workflow run status: ${status}`);
            
            if (status === 'completed') {
              console.log(`Workflow conclusion: ${run.data.conclusion}`);
              if (run.data.conclusion === 'success') {
                console.log('Workflow completed successfully!');
                break;
              } else {
                throw new Error(`Workflow failed: ${run.data.conclusion}`);
              }
            }
            
            console.log(`Waiting for ${intervalSeconds} seconds before checking again...`);
            await new Promise(resolve => setTimeout(resolve, intervalSeconds * 1000));
          }
          
          if (status !== 'completed') {
            throw new Error('Timeout waiting for workflow to complete');
          } 